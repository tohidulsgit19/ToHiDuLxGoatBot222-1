const fs = require("fs-extra"); const path = require("path"); const moment = require("moment-timezone");

module.exports = { config: { name: "owner", aliases: ["admin", "creator", "author"], version: "1.1.0", author: "Tohidul", countDown: 5, role: 0, shortDescription: "Show Bot Owner info in a stylish card", longDescription: "Displays the bot owner's profile, social links, and current Dhaka time with an optional image attachment and auto unsend.", category: "info", guide: { en: "{pn} ‚Äî show owner info\n{pn} links ‚Äî show only social links", bn: "{pn} ‚Äî ‡¶ì‡¶®‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá\n{pn} links ‚Äî ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶∏‡ßã‡¶∂‡ßç‡¶Ø‡¶æ‡¶≤ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá" }, usePrefix: true },

// ====== EDIT THESE TO YOUR LIKING ====== ownerCard: { name: "ùôè ùôä ùôÉ ùôÑ ùòø ùôê ùôá „ÉÉ", gender: "Male", relation: "Single", age: "18+", religion: "Islam", education: "Inter 2nd Year", address: "Thakurgaon, Bangladesh", socials: { tiktok: "-----------", telegram: "https://t.me/NFTTOHIDUL19", facebook: "https://www.facebook.com/profile.php?id=100092006324917" }, // Put an image named 'owner.png' in the same folder under ./cache/ imageRelative: path.join("cache", "owner.png"), // Auto unsend after N seconds (0 = don't unsend) autoUnsendSeconds: 120 },

onStart: async function ({ message, api, event, args }) { try { const now = moment().tz("Asia/Dhaka").format("DD/MM/YYYY hh:mm:ss A"); const { name, gender, relation, age, religion, education, address, socials, imageRelative, autoUnsendSeconds } = this.ownerCard;

const header = "‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ„Äî üëë ùóïùó¢ùóß ùó¢ùó™ùó°ùóòùó• ùóúùó°ùóôùó¢ üëë „Äï‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ";
  const bodyLines = [
    `‚îÉ üè∑Ô∏è ùó°ùóÆùó∫ùó≤       : ${name}`,
    `‚îÉ üë®‚Äçüíº ùóöùó≤ùóªùó±ùó≤ùóø     : ${gender}`,
    `‚îÉ üíñ ùó•ùó≤ùóπùóÆùòÅùó∂ùóºùóª   : ${relation}`,
    `‚îÉ üéÇ ùóîùó¥ùó≤         : ${age}`,
    `‚îÉ üïå ùó•ùó≤ùóπùó∂ùó¥ùó∂ùóºùóª    : ${religion}`,
    `‚îÉ üéì ùóòùó±ùòÇùó∞ùóÆùòÅùó∂ùóºùóª  : ${education}`,
    `‚îÉ üè† ùóîùó±ùó±ùóøùó≤ùòÄùòÄ    : ${address}`
  ];

  const linksBlock = [
    "‚î£‚îÅ‚îÅ‚îÅ„Äî üåê ùó¶ùó¢ùóñùóúùóîùóü ùóüùóúùó°ùóûùó¶ „Äï‚îÅ‚îÅ‚îÅ‚î´",
    `‚îÉ üé≠ TikTok    : ${socials.tiktok}`,
    `‚îÉ ‚úàÔ∏è Telegram  : ${socials.telegram}`,
    `‚îÉ üåç Facebook  : ${socials.facebook}`
  ];

  const timeBlock = [
    "‚î£‚îÅ‚îÅ‚îÅ„Äî ‚è∞ ùó®ùó£ùóóùóîùóßùóòùóó ùóßùóúùó†ùóò „Äï‚îÅ‚îÅ‚îÅ‚î´",
    `‚îÉ üïí ${now}`
  ];

  const footer = "‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\nüíå ùë™ùíìùíÜùíÇùíïùíÜùíÖ ùíÉùíö ùëªùë∂ùëØùë∞ùë´ùëºùë≥";

  const showOnlyLinks = args[0] && args[0].toLowerCase() === "links";

  const content = showOnlyLinks
    ? ["„Äî üåê ùó¶ùó¢ùóñùóúùóîùóü ùóüùóúùó°ùóûùó¶ „Äï", linksBlock.slice(1).join("\n")].join("\n")
    : [header, "‚îÉ", ...bodyLines, "‚îÉ", ...linksBlock, ...timeBlock, footer].join("\n");

  // Try attaching image if exists
  const imagePath = path.join(__dirname, imageRelative);
  const hasImage = fs.existsSync(imagePath);

  const msgPayload = hasImage
    ? { body: content, attachment: fs.createReadStream(imagePath) }
    : { body: content + (!hasImage ? "\n\n[‚ÑπÔ∏è] Put an image at ./cache/owner.png to show a photo." : "") };

  const sent = await message.reply(msgPayload);

  // Auto unsend if enabled
  if (autoUnsendSeconds && Number(autoUnsendSeconds) > 0) {
    setTimeout(() => {
      api.unsendMessage(sent.messageID);
    }, Number(autoUnsendSeconds) * 1000);
  }
} catch (err) {
  console.error("owner.js error:", err);
  return message.reply("‚ùå ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§");
}

} };

